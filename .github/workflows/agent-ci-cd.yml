name: Agent CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/agent
  DEPLOY_PATH: ${{ secrets.DEPLOY_PATH || '/apps/stack' }}
  COMPOSE_DST: ${{ secrets.COMPOSE_FILE || 'docker-compose.yml' }}
  SERVICE_NAME: ${{ secrets.AGENT_SERVICE_NAME || 'agent' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            # 登录 GHCR
            echo "${{ secrets.GHCR_READ_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin
            cd "${{ env.DEPLOY_PATH }}"
            # 若端口被旧容器占用，先清理（仅清理绑定了 8001 的容器）
            OCC=$(docker ps --format '{{.ID}} {{.Ports}}' | awk '/:8001->/ {print $1}')
            [ -n "$OCC" ] && docker rm -f $OCC || true
            # 拉镜像并重启 agent
            docker compose -f "${{ env.COMPOSE_DST }}" pull "${{ env.SERVICE_NAME }}"
            docker compose -f "${{ env.COMPOSE_DST }}" up -d --remove-orphans "${{ env.SERVICE_NAME }}"
            docker system prune -f
